<!DOCTYPE html>
<html>
  <head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <title>HoroBot2 Control Panel</title>
    <style>
      html {
        font-family: sans-serif;
      }
      .block {
        display: block;
        margin: 0.5em 0 0.5em 0;
      }
      .control-group {
        margin-top: 1em;
        margin-bottom: 1em;
        padding: 0.5em;
        border: 1px solid black;
      }
      .control-group-title {
        margin: 0;
      }
      #manual-message-log-buffer {
        display: none;
        box-sizing: border-box;
        width: 100%;
        height: 12em;
        resize: none;
      }
      #hsor-switch-switch {
        display: none;
      }
    </style>
  </head>
  <body>
    <h1>HoroBot2 Control Panel</h1>
    <label class="block">
      Password:
      <input id="password" type="password" autocomplete="off">
    </label>

    <div class="control-group">
      <h2 class="control-group-title">Manual messages</h2>
      <textarea id="manual-message-log-buffer"></textarea>
      <label class="block">
        Target group:<br>
        <select id="manual-message-target-group">
          <option value="" selected disabled>Please select</option>
          <% groups.each do |group| %>
          <option value="<%= h group.name %>"><%= h group.name %></option>
          <% end %>
        </select>
      </label>
      <label class="block">
        Message text:<br>
        <input id="manual-message-message-text" type="text" autocomplete="off">
      </label>
      <button id="manual-message-send-button" class="block">Send</button>
    </div>

    <div class="control-group">
      <h2 class="control-group-title">HoroSpeak on reply switch</h2>
      <select id="hsor-switch-target-group">
        <option value="" selected disabled>Please select</option>
        <% groups.each do |group| %>
        <option value="<%= h group.name %>"><%= h group.name %></option>
        <% end %>
      </select>
      <select id="hsor-switch-switch">
        <option value="true">On</option>
        <option value="false">Off</option>
      </select>
    </div>

    <div class="control-group">
      <h2 class="control-group-title">Plugin reload button</h2>
      <button id="plugin-reload-button">Reload all plugins</button>
    </div>

    <script>
    (function() {
      function sendInstruction(obj, callback) {
        obj = JSON.parse(JSON.stringify(obj)) // Copy
        obj.password = document.getElementById('password').value

        var body = JSON.stringify(obj)
        var request = new XMLHttpRequest()
        request.open('POST', '/control', true)
        request.setRequestHeader('Content-Type', 'application/json; charset=utf-8')

        request.addEventListener('error', function() {
          callback(new Error('Request error.'))
        })
        request.addEventListener('load', function() {
          try {
            var responseObj = JSON.parse(request.responseText)
            if (responseObj.ok) {
              callback(null, responseObj)
            } else {
              callback(new Error(responseObj.message))
            }
          } catch (err) {
            callback(new Error(request.responseText))
          }
        })

        request.send(body)
      }


      // Manual messages

      document.getElementById('manual-message-send-button').addEventListener('click', sendManualMessage)
      document.getElementById('manual-message-message-text').addEventListener('keydown', function(event) {
        if (event.key == 'Enter' || event.keyCode == 13) {
          sendManualMessage()
        }
      })

      function sendManualMessage() {
        function writeLog(text) {
          var buffer = document.getElementById('manual-message-log-buffer')
          buffer.style.display = 'block'
          buffer.value = buffer.value + text + "\n"
          buffer.scrollTop = buffer.scrollHeight
        }

        var group = document.getElementById('manual-message-target-group').value
        if (!group) {
          writeLog('No group specified.')
          return
        }
        var text = document.getElementById('manual-message-message-text').value
        if (!text) {
          writeLog('No text written.')
          return
        }

        var button = document.getElementById('manual-message-send-button')
        button.disabled = true
        sendInstruction({
          method: 'send_message',
          group_name: group,
          text: text
        }, function(err, response) {
          button.disabled = false
          if (err) {
            writeLog('Error: ' + err.message)
            return
          }
          writeLog(group + ' <-- ' + text)
          document.getElementById('manual-message-message-text').value = ''
        })
      }


      // HoroSpeak on reply switch

      document.getElementById('hsor-switch-target-group').addEventListener('change', function(event) {
        var groupMenu = event.target
        var switchMenu = document.getElementById('hsor-switch-switch')
        switchMenu.style.display = 'none'
        sendInstruction({
          method: 'set_horo_speak_on_reply',
          group_name: groupMenu.value
        }, function(err, responseObj) {
          if (err) {
            alert(err.message)
            groupMenu.selectedIndex = 0
            return
          }
          switchMenu.selectedIndex = responseObj.horo_speak_on_reply ? 0 : 1
          switchMenu.style.display = 'block'
        })
      })

      document.getElementById('hsor-switch-switch').addEventListener('change', function(event) {
        var groupMenu = document.getElementById('hsor-switch-target-group')
        var switchMenu = event.target
        switchMenu.disabled = true
        var toggle
        if (switchMenu.value === 'true') {
          toggle = true
        } else if (switchMenu.value === 'false') {
          toggle = false
        }
        sendInstruction({
          method: 'set_horo_speak_on_reply',
          group_name: groupMenu.value,
          toggle: toggle
        }, function(err, responseObj) {
          if (err) {
            alert(err.message)
            switchMenu.style.display = 'none'
            switchMenu.disabled = false
            return
          }
          switchMenu.selectedIndex = responseObj.horo_speak_on_reply ? 0 : 1
          switchMenu.disabled = false
        })
      })

      // Plugin reload button

      document.getElementById('plugin-reload-button').addEventListener('click', function(event) {
        sendInstruction({
          method: 'reload_plugins'
        }, function(err) {
          if (err) {
            alert(err.message)
            return
          }
          alert("Plugins have been reloaded.")
        })
      })
    })()
    </script>
  </body>
</html>
